
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://zbhonwmadpxokkcbfpgp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpiaG9ud21hZHB4b2trY2JmcGdwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY5Nzg3MzMsImV4cCI6MjA2MjU1NDczM30.6q6a59ijQ1f7xwWH5DhP82svjU7PluXPIOQC9D9zwrE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'Content-Type': 'application/json'
    }
  },
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  }
});

// Debug log to check auth status when client is initialized
if (typeof window !== 'undefined') {
  supabase.auth.getSession().then(({ data, error }) => {
    if (error) {
      console.error('Error checking auth session:', error);
      return;
    }
    
    if (data.session) {
      console.log('User is authenticated with ID:', data.session.user.id);
      console.log('Session expires at:', new Date(data.session.expires_at * 1000).toISOString());
      
      // Verify token with Supabase
      supabase.auth.getUser().then(({ data: userData, error: userError }) => {
        if (userError) {
          console.error('Error verifying token:', userError);
        } else {
          console.log('Token verified for user:', userData.user.id);
        }
      });
    } else {
      console.log('No active session found');
    }
  }).catch(error => {
    console.error('Error checking auth session:', error);
  });
}
